The ``MyList`` module
======================

Using ``MyList``
-------------------

This is an example text file in reStructuredText format.  First import
``MyList`` from the ``my_list`` module:

    >>> MyList = __import__('1-my_list').MyList

Now use it:

    >>> len('print(__import__("1-my_list").__doc__)') > 1
    True
    
    >>> len('print(__import__("1-my_list").MyList.__doc__)') > 1
    True

    >>> len('print(__import__("1-my_list").MyList.print_sorted.__doc__)') > 1
    True

    >>> my_list = MyList()
    >>> print(my_list)
    []
    >>> my_list.print_sorted()
    []
    >>> my_list.append(3)
    >>> print(my_list)
    [3]
    >>> my_list.append(4)
    >>> my_list.append(1)
    >>> my_list.append(5)
    >>> my_list.append(-3)
    >>> print(my_list)
    [3, 4, 1, 5, -3]
    >>> my_list.print_sorted()
    [-3, 1, 3, 4, 5]
    >>> my_list.append(1)
    >>> print(my_list)
    [3, 4, 1, 5, -3, 1]
    >>> my_list.print_sorted()
    [-3, 1, 1, 3, 4, 5]
    >>> print(my_list)
    [3, 4, 1, 5, -3, 1]
    >>> my_list.pop(0)
    3
    >>> print(my_list)
    [4, 1, 5, -3, 1]
    >>> my_list.extend([1, 3, 4])
    >>> print(my_list)
    [4, 1, 5, -3, 1, 1, 3, 4]
    >>> my_list.reverse()
    >>> print(my_list)
    [4, 3, 1, 1, -3, 5, 1, 4]
    >>> my_list.sort()
    >>> print(my_list)
    [-3, 1, 1, 1, 3, 4, 4, 5]
    >>> my_list.print_sorted(1)
    Traceback (most recent call last):
    ...
    TypeError: print_sorted() takes 1 positional argument but 2 were given
