The ``BaseGeometry`` module
======================

Using ``BaseGeometry``
-------------------

This is an example text file in reStructuredText format.  First import
``BaseGeometry`` from the ``base_geometry`` module:

	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

	>>> bg = BaseGeometry()

	>>> len('print(__import__("7-base_geometry").__doc__)') > 1
	True

	>>> len('print(__import__("7-base_geometry").BaseGeometry.__doc__)') > 1
	True

	>>> len('print(__import__("7-base_geometry").BaseGeometry.area.__doc__)') > 1
	True

	>>> len('print(__import__("7-base_geometry").BaseGeometry.integer_validator.__doc__)') > 1
	True

======================
Typical Test         |
======================

	>>> bg.integer_validator("my_int", 12)
	>>> bg.integer_validator("width", 89)
	>>> bg.area()
	Traceback (most recent call last):
	...
	Exception: area() is not implemented

======================
Error case           |
======================

Error Type
----------------------

	>>> bg.integer_validator("distance", None)
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance", 3.5)
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance", True)
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance", [1, 2, 3])
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance", (1, 2, 3))
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance", {"hey": 1})
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance", -3.5)
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance")
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> bg.integer_validator("distance", 3, 4)
	Traceback (most recent call last):
	...
	TypeError: integer_validator() takes 3 positional arguments but 4 were given

	>>> bg.integer_validator()
	Traceback (most recent call last):
	...
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg.integer_validator("name", "John")
	Traceback (most recent call last):
	...
	TypeError: name must be an integer

	>>> bg.area(1)
	Traceback (most recent call last):
	...
	TypeError: area() takes 1 positional argument but 2 were given

	>>> bg.integer_validator("distance", {"hello", "world"})
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

	>>> bg.integer_validator("distance", complex(3, 1))
	Traceback (most recent call last):
	...
	TypeError: distance must be an integer

Error Value
----------------------

	>>> bg.integer_validator("age", 0)
	Traceback (most recent call last):
	...
	ValueError: age must be greater than 0

	>>> bg.integer_validator("distance", -4)
	Traceback (most recent call last):
	...
	ValueError: distance must be greater than 0
